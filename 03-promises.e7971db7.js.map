{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAY2C,SAAlCC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAmCAO,SAASC,cAAc,SAC/BC,iBAAiB,UA/BY,SAAZC,GACpBA,EAAMC,iBAEN,MAAMC,EAAOF,EAAMG,cACbC,EAAQC,OAAOH,EAAKI,SAAShB,MAAMiB,OACnCC,EAAOH,OAAOH,EAAKI,SAASE,KAAKD,OACjCE,EAASJ,OAAOH,EAAKI,SAASG,OAAOF,OAE3C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAEqCtB,EAAjDsB,EAAI,EAAGN,EAAQM,EAAIF,GAC9BG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MAEjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAElBsB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAiBC,MAAU,IAM9BY,EAApBe,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'; // Імпорт бібліотеки Notiflix\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// Функція для створення промісу з заданою затримкою\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Функція для обробки події сабміту форми\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const form = event.currentTarget;\n  const delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    // Створюємо проміс зі збільшенням затримки для кожного наступного промісу\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        // Виводимо повідомлення про виконаний проміс\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // Виводимо повідомлення про відхилення промісу\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  // Очищаємо форму після сабміту\n  form.reset();\n}\n\n// Додаємо обробник події сабміту форми\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","form1","currentTarget","delay1","Number","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.e7971db7.js.map"}